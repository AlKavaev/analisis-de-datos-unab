require(ggplot2);require(gridExtra);require(Quandl);require(reshape)
hk.df <- Quandl("YAHOO/INDEX_HSI", start_date="2005-01-01", end_date="2015-09-25",
collapse="monthly", type = "raw", authcode = "UocFPgYgxkTyrXN4UsU9")
hk.df <- Quandl("YAHOO/INDEX_HSI", start_date="2005-01-01", end_date="2015-09-25",
collapse="monthly", type = "zoo", authcode = "UocFPgYgxkTyrXN4UsU9")
saveRDS(hk.df,"hk.df.RData")
saveRDS(hk.df,"hk.df.RData")
hk.df <- readRDS("hk.df.Rdata")
hk.df <- Quandl("YAHOO/INDEX_HSI", start_date="2005-01-01", end_date="2015-09-25",
collapse="monthly", type = "ts", authcode = "UocFPgYgxkTyrXN4UsU9")
saveRDS(hk.df,"hk.df.RData")
hk.df <- readRDS("hk.df.Rdata")
plot(stl(hk.df[,4],s.window="periodic"), main = "CKH Decomposition")
rollapply(hk.df[,4],3,mean)
rollapply(hk.df[,4],3,mean)
rollapply(hk.df[,4],4,mean)
rollapply(hk.df[,4],3,mean)
plot(rollapply(hk.df[,4],3,mean))
plot(rollapply(hk.df[,4],3,mean),  main = "3 weeks rolling average")
plot(rollapply(hk.df[,4],3,mean),  main = "3 weeks rolling average", ylab = "Price")
hk <- readRDS("hk.Rdata")
plot(stl(hk[,4],s.window="periodic"), main = "HSI Decomposition")
plot(rollapply(hk[,4],3,mean),  main = "3 weeks rolling average", ylab = "Price")
hk.xts <- as.xts(hk)
hk.xts <- as.xts(hk)
charts.PerformanceSummary(
ROC(hk.xts[,4], n = 1, type = "discrete"),
main = "Hang Send Index"
)
hk[,4]
ret.simple <- diff(hk[,4]) / lag(hk[,4], k = -1) * 100
ret.simple
ret.compuesto <- diff(log(hk[,4])) * 100
ret.compuesto
summary(coredata(ret.simple))
hk.xts <- as.xts(hk)
charts.PerformanceSummary(
ROC(hk.xts[,4], n = 1, type = "discrete"),
main = "Hang Seng Index"
)
require(ggplot2);require(gridExtra);require(PerformanceAnalytics);require(quantmod);require(Quandl);require(reshape)
hk.xts <- as.xts(hk)
charts.PerformanceSummary(
ROC(hk.xts[,4], n = 1, type = "discrete"),
main = "Hang Seng Index"
)
summary(coredata(ret.compuesto))
summary(coredata(ret.simple))
summary(coredata(ret.simple))
summary(coredata(ret.compuesto))
ret.compuesto[which.max(ret.compuesto)]
hk <- Quandl("YAHOO/INDEX_HSI", start_date="2005-01-01", end_date="2015-09-25",
collapse="monthly", type = "zoo", authcode = "UocFPgYgxkTyrXN4UsU9")
saveRDS(hk,"hk.RData")
hk <- readRDS("hk.Rdata")
plot(stl(hk[,4],s.window="periodic"), main = "HSI Decomposition")
plot(rollapply(hk[,4],3,mean),  main = "3 weeks rolling average", ylab = "Price")
hk.xts <- as.xts(hk)
charts.PerformanceSummary(
ROC(hk.xts[,4], n = 1, type = "discrete"),
main = "Hang Seng Index"
)
charts.PerformanceSummary(
ROC(hk[,4], n = 1, type = "discrete"),
main = "Hang Seng Index"
)
charts.PerformanceSummary(
ROC(hk[,4], n = 1, type = "discrete"),
main = "Hang Seng Index"
)
plot(rollapply(hk[,4],3,mean),  main = "3 weeks rolling average", ylab = "Price")
charts.PerformanceSummary(
ROC(hk[,4], n = 1, type = "discrete"),
main = "Hang Seng Index"
)
ret.simple <- diff(hk[,4]) / lag(hk[,4], k = -1) * 100
ret.compuesto <- diff(log(hk[,4])) * 100
summary(coredata(ret.simple))
summary(coredata(ret.compuesto))
ret.compuesto[which.max(ret.compuesto)]
hist(ret.compuesto, breaks=100, main = "Histogram of Simple Returns", xlab="%")
hist(ret.compuesto, breaks=100, main = "Histogram of Simple Returns", col = "darkblue", xlab="%")
hist(ret.compuesto, breaks=100, main = "Histogram of Simple Returns", col = "royalblue", xlab="%")
View(hk.xts)
hk.xts <- as.xts(hk)
View(hk.xts)
hk
hk.2015 <- window(aapl, start = '2015-01-01', end = '2015-08-31')
hk.2015 <- window(hk, start = '2015-01-01', end = '2015-08-31')
hk.2015
quantile(ret.compuesto, probs = 0.01)
hist(ret.compuesto, breaks=100, main = "HSI Histogram of Compounded Returns", col = "royalblue", xlab="%")
require(forecast)
mod <- auto.arima(ret.simple, stationary = TRUE, seasonal = FALSE, ic="aic")
modelo <- auto.arima(ret.simple, stationary = TRUE, seasonal = FALSE, ic="aic")
modelo
modelo <- auto.arima(ret.simple, stationary = TRUE, seasonal = FALSE, ic="aic")
modelo
modelo <- auto.arima(ret.compuesto, stationary = TRUE, seasonal = FALSE, ic="aic")
modelo
ret.compuesto.2015 <- diff(log(hk.2015[,4])) * 100
modelo <- auto.arima(ret.compuesto.2015, stationary = TRUE, seasonal = FALSE, ic="aic")
modelo
modelo <- auto.arima(ret.compuesto.2015, stationary = TRUE, seasonal = FALSE, ic="aic")
modelo <- auto.arima(ret.compuesto.2015, stationary = TRUE, seasonal = FALSE, ic="aic")
modelo
hk.2015
ret.compuesto.2015 <- diff(log(hk.2015[,4])) * 100
ret.compuesto.2015
modelo <- auto.arima(ret.compuesto.2015, stationary = TRUE, seasonal = FALSE, ic="aic")
modelo
modelo <- auto.arima(hk, stationary = TRUE, seasonal = FALSE, ic="aic")
modelo <- auto.arima(ret.simple, stationary = TRUE, seasonal = FALSE, ic="aic")
modelo
modelo <- auto.arima(ret.compuesto.2015, stationary = TRUE, seasonal = FALSE, ic="aic")
modelo
ret.simple.2015 <- diff(hk.2015[,4]) / lag(hk.2015[,4], k = -1) * 100
modelo <- auto.arima(ret.simple.2015, stationary = TRUE, seasonal = FALSE, ic="aic")
modelo
modelo <- auto.arima(ret.simple.2015, stationary = TRUE, seasonal = TRUE, ic="aic")
modelo
modelo <- auto.arima(ret.simple.2015, stationary = TRUE, seasonal = TRUE, ic="aic")
fit1 <- auto.arima(ret.simple.2015, stationary = TRUE, seasonal = TRUE, ic="aic")
fit1 <- auto.arima(ret.simple, stationary = TRUE, seasonal = TRUE, ic="aic")
fit1
fit2 <- auto.arima(ret.simple.2015, stationary = TRUE, seasonal = TRUE, ic="aic")
fit2
hk <- Quandl("YAHOO/INDEX_HSI", start_date="2005-01-01", end_date="2015-09-25",
collapse="weekly", type = "zoo", authcode = "UocFPgYgxkTyrXN4UsU9")
saveRDS(hk,"hk.RData")
hk <- readRDS("hk.Rdata")
plot(stl(hk[,4],s.window="periodic"), main = "HSI Decomposition")
hk <- Quandl("YAHOO/INDEX_HSI", start_date="2005-01-01", end_date="2015-09-25",
collapse="monthly", type = "zoo", authcode = "UocFPgYgxkTyrXN4UsU9")
saveRDS(hk,"hk.RData")
hk <- readRDS("hk.Rdata")
fit1
fit2
fit1
summary(auto.arima(ret.simple, stationary = TRUE, seasonal = TRUE, ic="aic"))
auto.arima(ret.simple, stationary = TRUE, seasonal = TRUE, ic="aic")
summary(auto.arima(ret.simple, stationary = TRUE, seasonal = TRUE, ic="aic"))
summary(auto.arima(ret.simple, stationary = TRUE, seasonal = TRUE, ic="aic"))
fit2 <- auto.arima(ret.simple.2015, stationary = TRUE, seasonal = TRUE, ic="aic")
hk.components <- decompose(hk)
fit1 <- auto.arima(ret.simple, stationary = TRUE, seasonal = TRUE, ic="aic")
fit2 <- auto.arima(ret.simple.2015, stationary = TRUE, seasonal = TRUE, ic="aic")
confint(fit1)
confint(fit2)
hk.2015
hk.2 <- window(hk, start = '2014-01-01', end = '2015-08-31')
ret.simple.2 <- diff(hk.2[,4]) / lag(hk.2[,4], k = -1) * 100
fit2 <- auto.arima(ret.simple.2, stationary = TRUE, seasonal = TRUE, ic="aic")
confint(fit2)
fit2
hk.2 <- window(hk, start = '2011-01-01', end = '2015-08-31')
ret.simple.2 <- diff(hk.2[,4]) / lag(hk.2[,4], k = -1) * 100
fit1 <- auto.arima(ret.simple, stationary = TRUE, seasonal = TRUE, ic="aic")
fit2 <- auto.arima(ret.simple.2, stationary = TRUE, seasonal = TRUE, ic="aic")
confint(fit1)
confint(fit2)
hk <- Quandl("YAHOO/INDEX_HSI", start_date="2005-01-01", end_date="2015-09-25",
collapse="weekly", type = "xts", authcode = "UocFPgYgxkTyrXN4UsU9")
hk
saveRDS(hk,"hk.RData")
hk <- readRDS("hk.Rdata")
decompose(hk)
hk <- Quandl("YAHOO/INDEX_HSI", start_date="2005-01-01", end_date="2015-09-25",
collapse="weekly", type = "ts", authcode = "UocFPgYgxkTyrXN4UsU9")
saveRDS(hk,"hk.RData")
hk <- readRDS("hk.Rdata")
hk <- Quandl("YAHOO/INDEX_HSI", start_date="2005-01-01", end_date="2015-09-25",
collapse="weekly", type = "xts", authcode = "UocFPgYgxkTyrXN4UsU9")
saveRDS(hk,"hk.RData")
hk <- readRDS("hk.Rdata")
plot(stl(hk[,4],s.window="periodic"), main = "HSI Decomposition")
hk <- Quandl("YAHOO/INDEX_HSI", collapse="weekly", type = "zoo", authcode = "UocFPgYgxkTyrXN4UsU9")
saveRDS(hk,"hk.RData")
hk <- readRDS("hk.Rdata")
plot(stl(hk[,4],s.window="periodic"), main = "HSI Decomposition")
hk <- Quandl("YAHOO/INDEX_HSI", collapse="monthly", type = "zoo", authcode = "UocFPgYgxkTyrXN4UsU9")
saveRDS(hk,"hk.RData")
hk <- readRDS("hk.Rdata")
plot(stl(hk[,4],s.window="periodic"), main = "HSI Decomposition")
hk <- window(hk, start = '2000-01-01', end = '2015-08-31')
hk
summary(fit1)
fit1 <- auto.arima(ret.simple, stationary = TRUE, seasonal = TRUE, ic="aic")
summary(fit1)
confint(fit1)
require(forecast);require(ggplot2);require(gridExtra);require(PerformanceAnalytics);require(quantmod);require(Quandl);require(reshape)
hk <- readRDS("hk.Rdata")
hk <- window(hk, start = '2000-01-01', end = '2015-08-31')
plot(stl(hk[,4],s.window="periodic"), main = "HSI Decomposition")
plot(rollapply(hk[,4],3,mean),  main = "3 weeks rolling average", ylab = "Price")
charts.PerformanceSummary(
ROC(hk[,4], n = 1, type = "discrete"),
main = "Hang Seng Index"
)
ret.simple <- diff(hk[,4]) / lag(hk[,4], k = -1) * 100
ret.compuesto <- diff(log(hk[,4])) * 100
summary(coredata(ret.simple))
summary(coredata(ret.compuesto))
ret.compuesto[which.max(ret.compuesto)]
hist(ret.compuesto, breaks=100, main = "HSI Histogram of Compounded Returns", col = "royalblue", xlab="%")
quantile(ret.compuesto, probs = 0.01)
fit1 <- auto.arima(ret.simple, stationary = TRUE, seasonal = TRUE, ic="aic")
summary(fit1)
confint(fit1)
fit1 <- auto.arima(ret.simple, stationary = TRUE, seasonal = FALSE, ic="aic")
summary(fit1)
confint(fit1)
fit1 <- auto.arima(ret.simple, stationary = TRUE, seasonal = FALSE, ic="aic")
summary(fit1)
confint(fit1)
fit2 <- auto.arima(ret.simple, stationary = TRUE, seasonal = TRUE, ic="aic")
summary(fit2)
confint(fit2)
fit1 <- auto.arima(ret.simple, stationary = TRUE, seasonal = FALSE, ic="aic")
summary(fit1)
confint(fit1)
fit2 <- auto.arima(ret.simple, stationary = FALSE, seasonal = TRUE, ic="aic")
summary(fit2)
confint(fit2)
fit3 <- auto.arima(ret.simple, stationary = TRUE, seasonal = TRUE, ic="aic")
summary(fit3)
confint(fit3)
summary(fit1)
summary(fit2)
summary(fit3)
summary(fit1)
pacf(fit1)
pacf(ret.simple,2)
tsdiag(fit1)
plot(fit1$x, lty = 1, main = "HSI returns: observed versus predicted values", ylab = "Return (%)", xlab = "Date")
lines(fitted(fit1), lty = 2,lwd = 2, col = "red")
lines(fitted(fit1), lty = 1,lwd = 2, col = "red")
predict(fit1, n.ahead=3)
plot(forecast(mod))
plot(forecast(fit1))
predict(fit2, n.ahead=3)
predict(fit1, n.ahead=6)
forecast(fit1)
predict(fit1, n.ahead=6)
plot(forecast(fit1))
plot(forecast(fit1))
forecast(fit1)
plot(predict(fit1, n.ahead=6))
